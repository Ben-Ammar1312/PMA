# ======================


# APPLICATION CONFIG


# ======================



spring.application.name=Backend



server.port=8082



server.servlet.context-path=/



# ======================


# DATABASE CONFIG


# ======================


# MongoDB



spring.data.mongodb.uri=mongodb://root:secret@mongodb:27017/mydatabase?authSource=admin&retryWrites=true

#spring.data.mongodb.uri=mongodb://root:secret@144.91.76.149:27017/?authSource=admin

# PostgreSQL (pour Keycloak)



spring.datasource.url=jdbc:postgresql://db:5432/keycloak



spring.datasource.username=kc



spring.datasource.password=kcpass



spring.jpa.hibernate.ddl-auto=validate



# ======================


# KEYCLOAK CONFIG


# ======================


# Configuration interne (entre containers)






# Keycloak Admin Client Configuration (requise par KeycloakAdminConfig)

keycloak.server-url=http://144.91.76.149:8180



keycloak.admin-realm=PMA                      # Le realm admin (generalement 'master')



keycloak.client-id=backend                     # Client ID pour l'administration



keycloak.login-client =backend






keycloak.username=admin                       # Utilisateur admin



keycloak.password=admin                          # Mot de passe admin



keycloak.target-realm=PMA



keycloak.ssl-required=none





# Configuration Spring Security


#spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.server-url}/realms/${keycloak.target-realm}



spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.server-url}/realms/${keycloak.target-realm}



# ======================


# SECURITY


# ======================


# CORS



cors.allowed-origins=http://localhost:3000,http://144.91.76.149:3000



cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS



cors.allowed-headers=*



cors.allow-credentials=true



# ======================


# FILE UPLOAD


# ======================



file.upload-dir=uploads



file.max-size=10MB



# ======================


# LOGGING


# ======================



logging.level.org.springframework=INFO



logging.level.org.springframework.security=DEBUG



logging.level.org.keycloak=DEBUG



logging.level.com.example.backend=DEBUG


logging.level.org.apache.catalina.core.ApplicationPart=DEBUG




# ======================


# DOCKER COMPOSE


# ======================



spring.docker.compose.readiness.timeout=4m



spring.docker.compose.lifecycle-management=start-and-stop

FAST_API_URL_SUMMARIZE =http://ai-engine-summary:8000/generate_patient_summaries
FAST_API_URL_PROCESS =http://144.91.76.149:8003/process-and-index/
FAST_API_URL_PROCESS_COMPLEMENTARY =http://144.91.76.149:8004/process-and-index-complementary/

FAST_API_URL_DELETE =http://ai-engine-suppression:8005/patients/


keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}

#keycloak.client-secret=j8SAp51SU3sNz3RKrH98rQpnNE92aXMr

# file upload config

spring.servlet.multipart.file-size-threshold=1KB
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=200MB

server.tomcat.max-swallow-size=-1
server.tomcat.max-http-form-post-size=100MB
# raise multipart part-count + per-part header size
server.tomcat.max-part-count=100
server.tomcat.max-part-header-size=8192

# optional if you also hit param count
server.tomcat.max-parameter-count=20000