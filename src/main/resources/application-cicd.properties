# ======================

# APPLICATION CONFIG

# ======================

spring.application.name=Backend

server.port=8082

server.servlet.context-path=/


# ======================

# DATABASE CONFIG

# ======================

# MongoDB

spring.data.mongodb.uri=mongodb://root:secret@mongodb:27017/mydatabase?authSource=admin&retryWrites=true


# PostgreSQL (pour Keycloak)

spring.datasource.url=jdbc:postgresql://db:5432/keycloak

spring.datasource.username=kc

spring.datasource.password=kcpass

spring.jpa.hibernate.ddl-auto=validate


# ======================

# KEYCLOAK CONFIG

# ======================

# Configuration interne (entre containers)

keycloak.auth-server-url=http://keycloak:8080

keycloak.realm=PMA

keycloak.resource=font-web

keycloak.public-client=true

keycloak.ssl-required=none

keycloak.credentials.secret=${KEYCLOAK_CLIENT_SECRET}  # Si client confidential

keycloak.use-resource-role-mappings=true

keycloak.principal-attribute=preferred_username


# Keycloak Admin Client Configuration (requise par KeycloakAdminConfig)

keycloak.server-url=http://keycloak:8080

# Reprend la même URL que auth-server-url

keycloak.admin-realm=master                      # Le realm admin (généralement 'master')

keycloak.client-id=admin-cli                     # Client ID pour l'administration

keycloak.username=admin                          # Utilisateur admin

keycloak.password=admin                          # Mot de passe admin


# Configuration supplémentaire pour cohérence

keycloak.credentials.secret=${KEYCLOAK_CLIENT_SECRET}  # Doit être défini dans les variables d'environnement


# Configuration Spring Security

spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}

spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}


# ======================

# SECURITY

# ======================

# CORS

cors.allowed-origins=http://localhost:8081,http://144.91.76.149:8081

cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS

cors.allowed-headers=*

cors.allow-credentials=true


# ======================

# FILE UPLOAD

# ======================

file.upload-dir=/app/uploads

file.max-size=10MB


# ======================

# LOGGING

# ======================

logging.level.org.springframework=INFO

logging.level.org.springframework.security=DEBUG

logging.level.org.keycloak=DEBUG

logging.level.com.example.backend=DEBUG


# ======================

# DOCKER COMPOSE

# ======================

spring.docker.compose.readiness.timeout=4m

spring.docker.compose.lifecycle-management=start-and-stop
